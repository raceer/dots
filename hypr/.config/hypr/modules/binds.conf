$subreset = hyprctl dispatch submap reset
$lock = hyprlock
$menu = rofi -show drun

$mainMod = SUPER # Sets "Windows" key as main modifier


binds {
    allow_workspace_cycles = true
}

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod SHIFT, Q, killactive,
bind = $mainMod SHIFT, E, exec, rofimoji --action clipboard
bind = $mainMod, M, exit,
# bind = $mainMod, E, exec, $fileManager
bind = $mainMod, c, togglefloating,
bind = $mainMod, D, exec, $menu
bind = $mainMod Control, D, exec, rofi -show run
bind = $mainMod SHIFT, P, pseudo, # dwindle
bind = $mainMod, U, togglesplit, # dwindle

### Volume Buttons
bindel = , xf86audioraisevolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bindel = , xf86audiolowervolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bind = , xf86audiomute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle

# Move focus with mainMod + arrow keys
# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod CTRL, 1, movetoworkspace, 1
bind = $mainMod CTRL, 2, movetoworkspace, 2
bind = $mainMod CTRL, 3, movetoworkspace, 3
bind = $mainMod CTRL, 4, movetoworkspace, 4
bind = $mainMod CTRL, 5, movetoworkspace, 5
bind = $mainMod CTRL, 6, movetoworkspace, 6
bind = $mainMod CTRL, 7, movetoworkspace, 7
bind = $mainMod CTRL, 8, movetoworkspace, 8
bind = $mainMod CTRL, 9, movetoworkspace, 9
bind = $mainMod CTRL, 0, movetoworkspace, 10

bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic


# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

bind = $mainMod, F, fullscreen
bind = $mainMod SHIFT, V, exec, copyq show

### Modes

## Resize

# will switch to a submap called resize
bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
$resize_speed = 70
$resize_faster = 300

binde = , l, resizeactive, $resize_speed 0
binde = , h, resizeactive, -$resize_speed 0
binde = , k, resizeactive, 0 -$resize_speed
binde = , j, resizeactive, 0 $resize_speed

binde = SHIFT, l, resizeactive, $resize_faster 0
binde = SHIFT, h, resizeactive, -$resize_faster 0
binde = SHIFT, k, resizeactive, 0 -$resize_faster
binde = SHIFT, j, resizeactive, 0 $resize_faster

# use reset to go back to the global submap
bind = , return, submap, reset

# will reset the submap, which will return to the global submap
submap = reset


## Monitor Handling
bind = $mainMod, p, submap, monitors
submap = monitors

bind = , 1, exec, hyprctl keyword monitor "$out_main, enable"
bind = , 2, exec, hyprctl keyword monitor "$out_hdmi, enable"

bind = SHIFT, 1, exec, hyprctl keyword monitor "$out_main, disable"
bind = SHIFT, 2, exec, hyprctl keyword monitor "$out_hdmi, disable"

bind = , return, submap, reset
submap = reset

# monitor = $out_hdmi, disable

## System commands

bindl = $mainMod, x, submap, system
submap = system

bindl = , l, exec, $lock & $subreset
bindl = , n, exec, systemctl suspend && $lock & $subreset
bindl = , o, exec, pkill -u $USER
bindl = , r, exec, shutdown -r now
bindl = , u, exec, shutdown now

bind = , return, submap, reset

submap = reset


## Application shortcuts

bind = $mainMod, O, submap, open
submap = open

bind = , e, exec, emacs & $subreset
bind = , d, exec, emacsclient -c -a emacs & $subreset
bind = , w, exec, nohup flatpak run com.brave.Browser &>/dev/null & $subreset
bind = , o, exec, obsidian & $subreset
bind = , v, exec, vscodium & $subreset
bind = , i, exec, chromium & $subreset
bind = , c, exec, flatpak run com.brave.Browser --app=https://chat.openai.com/ & $subreset

bind = , return, submap, reset

submap = reset



# bind = $mainMod, Tab, workspace, previous
# bind = $mainMod, Tab Shift, workspace, m - 1
bind = $mainMod, z, workspace, previous
bind = $mainMod, Tab, workspace, m+1
bind = $mainMod Shift, Tab, workspace, m-1

bind = $mainMod Shift, d, exec, grim -g "$(slurp)" - | wl-copy

bind = $mainMod, Q, exec, killall waybar || waybar

bind = $mainMod SHIFT, V, exec, copyq
bind = $mainMod CTRL, h, movecurrentworkspacetomonitor, l
bind = $mainMod CTRL, l, movecurrentworkspacetomonitor, r
bind = $mainMod CTRL, k, movecurrentworkspacetomonitor, u
bind = $mainMod CTRL, j, movecurrentworkspacetomonitor, d

### Monitor Setup
bind = $mainMod CTRL, Tab, focusmonitor, +1
